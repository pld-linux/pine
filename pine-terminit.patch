--- pine4.33/pico/osdep/term.inf.orig	Thu Jul  8 01:25:22 1999
+++ pine4.33/pico/osdep/term.inf	Sun Jul 22 03:37:59 2001
@@ -45,7 +45,6 @@
 static int      tinfoopen PROTO((void));
 static int      tinfoterminalinfo PROTO((int));
 static int      tinfoclose PROTO((void));
-static void     setup_dflt_esc_seq PROTO((void));
 
 extern int      tput();
 
@@ -97,110 +96,6 @@
 };
 
 
-/*
- * Add default keypad sequences to the trie.
- */
-static void
-setup_dflt_esc_seq()
-{
-    /*
-     * this is sort of a hack [no kidding], but it allows us to use
-     * the function keys on pc's running telnet
-     */
-
-    /* 
-     * UW-NDC/UCS vt10[02] application mode.
-     */
-    kpinsert("\033OP", F1, 1);
-    kpinsert("\033OQ", F2, 1);
-    kpinsert("\033OR", F3, 1);
-    kpinsert("\033OS", F4, 1);
-    kpinsert("\033Op", F5, 1);
-    kpinsert("\033Oq", F6, 1);
-    kpinsert("\033Or", F7, 1);
-    kpinsert("\033Os", F8, 1);
-    kpinsert("\033Ot", F9, 1);
-    kpinsert("\033Ou", F10, 1);
-    kpinsert("\033Ov", F11, 1);
-    kpinsert("\033Ow", F12, 1);
-
-    /*
-     * DEC vt100, ANSI and cursor key mode.
-     */
-    kpinsert("\033OA", KEY_UP, 1);
-    kpinsert("\033OB", KEY_DOWN, 1);
-    kpinsert("\033OC", KEY_RIGHT, 1);
-    kpinsert("\033OD", KEY_LEFT, 1);
-
-    /*
-     * special keypad functions
-     */
-    kpinsert("\033[4J", KEY_PGUP, 1);
-    kpinsert("\033[3J", KEY_PGDN, 1);
-    kpinsert("\033[2J", KEY_HOME, 1);
-    kpinsert("\033[N",  KEY_END, 1);
-
-    /* 
-     * ANSI mode.
-     */
-    kpinsert("\033[=a", F1, 1);
-    kpinsert("\033[=b", F2, 1);
-    kpinsert("\033[=c", F3, 1);
-    kpinsert("\033[=d", F4, 1);
-    kpinsert("\033[=e", F5, 1);
-    kpinsert("\033[=f", F6, 1);
-    kpinsert("\033[=g", F7, 1);
-    kpinsert("\033[=h", F8, 1);
-    kpinsert("\033[=i", F9, 1);
-    kpinsert("\033[=j", F10, 1);
-    kpinsert("\033[=k", F11, 1);
-    kpinsert("\033[=l", F12, 1);
-
-    /*
-     * DEC vt100, ANSI and cursor key mode reset.
-     */
-    kpinsert("\033[A", KEY_UP, 1);
-    kpinsert("\033[B", KEY_DOWN, 1);
-    kpinsert("\033[C", KEY_RIGHT, 1);
-    kpinsert("\033[D", KEY_LEFT, 1);
-
-    /*
-     * DEC vt52 mode.
-     */
-    kpinsert("\033A", KEY_UP, 1);
-    kpinsert("\033B", KEY_DOWN, 1);
-    kpinsert("\033C", KEY_RIGHT, 1);
-    kpinsert("\033D", KEY_LEFT, 1);
-
-    /*
-     * DEC vt52 application keys, and some Zenith 19.
-     */
-    kpinsert("\033?r", KEY_DOWN, 1);
-    kpinsert("\033?t", KEY_LEFT, 1);
-    kpinsert("\033?v", KEY_RIGHT, 1);
-    kpinsert("\033?x", KEY_UP, 1);
-
-    /*
-     * Sun Console sequences.
-     */
-    kpinsert("\033[1",   KEY_SWALLOW_Z, 1);
-    kpinsert("\033[215", KEY_SWAL_UP, 1);
-    kpinsert("\033[217", KEY_SWAL_LEFT, 1);
-    kpinsert("\033[219", KEY_SWAL_RIGHT, 1);
-    kpinsert("\033[221", KEY_SWAL_DOWN, 1);
-
-    /*
-     * Kermit App Prog Cmd, gobble until ESC \ (kermit should intercept this)
-     */
-    kpinsert("\033_", KEY_KERMIT, 1);
-
-    /*
-     * Fake a control character.
-     */
-    kpinsert("\033\033", KEY_DOUBLE_ESC, 1);
-}
-
-
 static int
 tinfoterminalinfo(termcap_wins)
     int termcap_wins;
@@ -317,32 +212,16 @@
     }
     
     /*
-     * Add default keypad sequences to the trie.
-     * Since these come first, they will override any conflicting termcap
-     * or terminfo escape sequences defined below.  An escape sequence is
-     * considered conflicting if one is a prefix of the other.
-     * So, without TERMCAP_WINS, there will likely be some termcap/terminfo
-     * escape sequences that don't work, because they conflict with default
-     * sequences defined here.
-     */
-    if(!termcap_wins)
-      setup_dflt_esc_seq();
-
-    /*
      * add termcap/info escape sequences to the trie...
      */
 
-    if(_ku != NULL && _kd != NULL && _kl != NULL && _kr != NULL){
-	kpinsert(_ku, KEY_UP, termcap_wins);
-	kpinsert(_kd, KEY_DOWN, termcap_wins);
-	kpinsert(_kl, KEY_LEFT, termcap_wins);
-	kpinsert(_kr, KEY_RIGHT, termcap_wins);
-    }
+    kpinsert(_ku, KEY_UP, termcap_wins);
+    kpinsert(_kd, KEY_DOWN, termcap_wins);
+    kpinsert(_kl, KEY_LEFT, termcap_wins);
+    kpinsert(_kr, KEY_RIGHT, termcap_wins);
 
-    if(_kppu != NULL && _kppd != NULL){
-	kpinsert(_kppu, KEY_PGUP, termcap_wins);
-	kpinsert(_kppd, KEY_PGDN, termcap_wins);
-    }
+    kpinsert(_kppu, KEY_PGUP, termcap_wins);
+    kpinsert(_kppd, KEY_PGDN, termcap_wins);
 
     kpinsert(_kphome, KEY_HOME, termcap_wins);
     kpinsert(_kpend,  KEY_END, termcap_wins);
@@ -361,18 +240,6 @@
     kpinsert(_kf11, F11, termcap_wins);
     kpinsert(_kf12, F12, termcap_wins);
 
-    /*
-     * Add default keypad sequences to the trie.
-     * Since these come after the termcap/terminfo escape sequences above,
-     * the termcap/info sequences will override any conflicting default
-     * escape sequences defined here.
-     * So, with TERMCAP_WINS, some of the default sequences will be missing.
-     * This means that you'd better get all of your termcap/terminfo entries
-     * correct if you define TERMCAP_WINS.
-     */
-    if(termcap_wins)
-      setup_dflt_esc_seq();
-
     if(Pmaster)
       return(0);
     else
